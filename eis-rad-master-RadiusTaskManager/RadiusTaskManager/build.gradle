import org.apache.tools.ant.filters.ReplaceTokens

group 'com.baltinfo.radius'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = "com.baltinfo.radius.application.JobApplication"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repository.springsource.com/maven/bundles/external" }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    def withoutX = { exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' }
    compile 'org.springframework.boot:spring-boot-starter:2.0.0.RELEASE', withoutX
    compile 'org.slf4j:slf4j-log4j12:1.7.12',
            'com.zaxxer:HikariCP:3.1.0',
            'org.jasypt:jasypt-hibernate4:1.9.2',
            'org.hibernate:hibernate-entitymanager:4.3.11.Final',
            'javax.transaction:jta:1.1',
            'commons-codec:commons-codec:1.9',
            'org.postgresql:postgresql:42.2.2',
            'org.apache.poi:poi-ooxml:3.17',
            'org.thymeleaf:thymeleaf:3.0.9.RELEASE',
            'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE',
            'org.imgscalr:imgscalr-lib:4.2',
            'com.jcraft:jsch:0.1.53',
            'joda-time:joda-time:2.1',
            'org.apache.tika:tika-core:1.0',
            'com.mashape.unirest:unirest-java:1.4.9',
            'com.fasterxml.jackson.core:jackson-databind:2.10.1',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8',
            'commons-io:commons-io:2.6',
            'commons-net:commons-net:3.6',
            'javax.media.jai:com.springsource.javax.media.jai.core:1.1.3',
            'org.apache.commons:commons-lang3:3.5',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.3.5',
            'net.coobird:thumbnailator:0.4.8',
            'org.docx4j:docx4j:3.2.2',
            'org.apache.tika:tika-parsers:1.11',
            'org.docx4j:docx4j-ImportXHTML:3.2.2',
            'org.glassfish:javax.faces:2.2.7',
            'net.sf.jasperreports:jasperreports:6.17.0',
            'net.sf.jasperreports:jasperreports-fonts:6.17.0',
            'net.sf.jasperreports:jasperreports-functions:6.17.0',
            'mysql:mysql-connector-java:8.0.26',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3',
            'io.jsonwebtoken:jjwt:0.9.1'

    compile fileTree(dir: 'lib', include: '*.jar')

    testCompile 'junit:junit:4.12',
            'org.mockito:mockito-all:1.10.19',
            'org.mockftpserver:MockFtpServer:2.7.1'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.0.0.RELEASE', withoutX
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.saliman:gradle-properties-plugin:1.5.1"
    }
}

apply plugin: "net.saliman.properties"

task replaceProperties() {
    println "environment = " + environmentName
    processResources {
        eachFile { details ->
            if (!details.name.endsWith('.png')) {
                filter(ReplaceTokens, tokens: project.filterTokens)
            }
        }
    }
}

compileJava {
    dependsOn replaceProperties
}


test {
    dependsOn replaceProperties
}

applicationDefaultJvmArgs = ["-Xmx4G"]
